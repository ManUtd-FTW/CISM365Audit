# Private/Controls/Control-2.1.9.ps1
function Get-CISM365Control_2_1_9 { [OutputType([hashtable])] param() @{ Id='2.1.9'; Name='Ensure that DKIM is enabled for all Exchange Online domains'; Profile='L1'; Automated=$true; Services=@('Exchange'); Description='DKIM should be enabled for all custom accepted domains (non-onmicrosoft.com).'; Rationale='DKIM helps prevent spoofing by cryptographically signing outbound mail.'; References=@('https://learn.microsoft.com/powershell/module/exchangepowershell/get-dkimsigningconfig?view=exchange-ps'); Audit={ try { try { if (-not (Get-Command -Name Get-CurrentTenant -ErrorAction SilentlyContinue)) { $scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path; $candidate = Join-Path $scriptDir '..\..\Helpers\Get-CurrentTenant.ps1'; $resolved = Resolve-Path -Path $candidate -ErrorAction SilentlyContinue; if ($resolved) { . $resolved.ProviderPath } } } catch {}; $domains = Get-AcceptedDomain -ErrorAction Stop | Where-Object { $_.DomainType -eq 'Authoritative' -and $_.DomainName -notlike '*.onmicrosoft.com' }; if (-not $domains) { return 'MANUAL: No custom authoritative domains found' } $notEnabled = @(); foreach ($d in $domains) { try { $dk = Get-DkimSigningConfig -Identity $d.DomainName -ErrorAction Stop; if (-not $dk.Enabled) { $notEnabled += $d.DomainName } } catch { $notEnabled += $d.DomainName } } if ($notEnabled.Count -eq 0) { return 'PASS: DKIM enabled on all custom domains' } else { return "FAIL: DKIM not enabled on: $($notEnabled -join ', ')" } } catch { return "ERROR: $($_.Exception.Message)" } } }
}